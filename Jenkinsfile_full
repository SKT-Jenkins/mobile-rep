pipeline {
	agent any
  environment {
		OUTPUT_PATH = './outputs/'
	}
  options {
		retry(3)
	}
  parameters {
     string(name: 'user', defaultValue: 'John', description: 'A user that triggers the pipeline')
  }
  tools {
	   // maven 'apache-maven-3.0.1' 
	   sh 'echo "Configure tools here"'
	   
  }
  triggers {
	   //Execute weekdays every four hours starting at minute 0
     // cron('0 */4 * * 1-5')
     //Query repository weekdays every four hours starting at minute 0
     pollSCM('0 */4 * * 1-5')
     //Execute when either job1 or job2 are successful
     upstream(upstreamProjects: 'job1, job2', threshold: hudson.model.Result.SUCCESS)
  }
	stages {
		stage ('build') {
      environment {
		     INPUT_PATH = './inputs/'
	    }
      options {
		    retry(3)
	    }
      
      input{
		     message "Press Ok to continue"
		     submitter "user1,user2"
		     parameters {
			      string(name:'username', defaultValue: 'user', description: 'Username of the user pressing Ok')
		     }
	    }
  
			steps {	  
         sh 'echo "A one line step"'
         sh ''' 
         echo "A multiline step"'
         cd /tests/results
         ls -lrt
         '''
         echo "Pipeline triggered by ${params.USER}"
      }
      
		}
		stage ('test: integration-&-quality') {
      when {
         branch 'master'
      }
			steps {	  
         bat "mvn clean test -Dsuite=SMOKE_TEST -Denvironment=QA"
         powershell ".\funcional_tests.ps1"
         echo "Scripted block"
         script {
	
         }
      }
		}
		stage ('test: functional') {
      agent { label "linux" }
			steps {
         parallel(
            a: {
                echo "Tests on Linux"
               },
            b: {
                echo "Tests on Windows"
               }
         )
      }
		}
		stage('Run Tests') {
       parallel {
          stage('Test On Windows') {
             agent { label "windows" }
             steps {
                bat "run-tests.bat"
             }
          }
          stage('Test On Linux') {
             agent { label "linux" }
             steps {
                sh "run-tests.sh"
             }
          }
       }
    }
		stage ('approval') {
			sh 'echo "Approval stage"'
		}
		stage ('deploy:prod') {
			sh 'echo "deploy stage"'
		}
	}
  post {
     always {
	      echo “Pipeline finished”
	      bat ./performCleanUp.bat
     }
  }
}
