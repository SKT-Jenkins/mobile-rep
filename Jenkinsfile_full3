pipeline {
	agent any
	libraries {
           lib('demo-lib@master')
        }
	environment {
		OUTPUT_PATH = './outputs/'
	}
   options {
		retry(3)
	}
   parameters {
     string(name: 'user', defaultValue: 'John', description: 'A user that triggers the pipeline')
     string(name: 'branch_nm', defaultValue: 'feature', description: 'Which branch to use?')
   }
  tools {
	   maven 'maven_v1'  
	   gradle 'gradlu'
   }
   triggers {
	   //Execute weekdays every four hours starting at minute 0
     // cron('0 */4 * * 1-5')
     //Query repository weekdays every four hours starting at minute 0
     pollSCM('0 */4 * * 1-5')
     //Execute when either job1 or job2 are successful
     // upstream(upstreamProjects: 'job1, job2', threshold: hudson.model.Result.SUCCESS)
   }
	stages {
      stage ('Checkout Code') {
         steps {
	    script {
	       hello.checkout_code("${branch_nm}")
	    }
          }
      }
		stage ('build') {
		   steps {
		   echo "Pulling from branch - ${env.branch_name}"
            sh 'echo "A one line step"'
            sh ''' 
            echo '"A multiline step"'
            ls -lrt
            '''
	    sh 'pwd'
            echo "Pipeline triggered by ${USER}"
	    sh 'mvn --version'
	    sh 'gradle --version'
         }
		}
		stage ('test: integration-&-quality') {
         /* input{     
		message "Should we continue?"
                ok "Yes, we should."
                submitter "${USER}"
                parameters {
                    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                }
	      } */
			steps {	  
         // bat "mvn clean test -Dsuite=SMOKE_TEST -Denvironment=QA"
         // powershell ".\funcional_tests.ps1"
         echo "Scripted block - steps where scripts will be coded"
             echo "Hello nice to meet you."
      }
		}
		stage ('test: functional') {
		environment {
		     INPUT_PATH_WIN = './inputs/windows'
		     INPUT_PATH_LINUX = './inputs/linux'
	        }
			steps {
         parallel(
            a: {
                echo "Tests on Linux with input ${INPUT_PATH_LINUX}"
               },
            b: {
                echo "Tests on Windows with input ${INPUT_PATH_WIN}"
               }
         )
         }
		}
		stage('Run Tests') {
               steps {
                  // bat "run-tests.bat"
		  echo "Running tests"
               }
         }
      
      stage('Test On Linux') {
         steps {
            // sh "run-tests.sh"
	    echo "Tests on Linux"
         }
      }
		stage ('approval') {
		   steps {
			sh 'echo "Approval stage"'
		   }
		}
		stage ('deploy:prod') {
		   steps {
			sh 'echo "deploy stage"'
		   }
		}
	}
}
